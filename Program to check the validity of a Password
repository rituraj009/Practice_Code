'''
	Time Complexity : O(N)
	Space Complexity: O(1)

	Where N is the length of the string.
'''

def isValid(string):
    
    n = len(string)
    
    # Case 1: Checking for length of password.
    if n < 8 or n > 15:
        return False
        
    containDigit = 0
    containSpace = 0
    containUpper = 0
    containLower = 0
    containSpecial = 0
    
    # Creating a String to store all special Characters.
    specialCharacters = "~`!@#$%^&*()_-+=}]{[|\\\"':;?/>.<,"
    
    # Case 2: Checking for space.
    if ' ' in string:
        return False
        
    
    digits = '0123456789'
    # Case 3: Checking for digits.
    for i in digits:
        if i in string:
            containDigit = 1
            break
        
    if containDigit == 0:
        return False
        
    
    upperAlpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
    # Case 4: Checking for UpperCase.
    for i in upperAlpha:
        if i in string:
            containUpper = 1
            break
    
    if containUpper == 0:
        return False
        
    lowerAlpha ='abcdefghijklmnopqrstuvwxyz'
    # Case 5: Checking for LowerCase.
    for i in lowerAlpha:
        if i in string:
            containLower = 1
            break
    
    if containLower == 0:
        return False
        
    for i in range(len(specialCharacters)):
        if specialCharacters[i] in string:
            containSpecial = 1
            break
        
    if containSpecial == 0:
        return False
        
    return True
